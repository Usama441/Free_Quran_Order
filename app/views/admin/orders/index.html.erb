<% content_for :title, "Order Management - Admin" %>

    <div class="flex justify-between items-center mb-6">
      <h2 class="text-3xl font-bold text-green-700 flex items-center space-x-2">
        <i class="fas fa-shopping-cart"></i><span>Order Management</span>
      </h2>
      <!-- Export Button -->
      <%= link_to '#', class: "bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition flex items-center space-x-2" do %>
        <i class="fas fa-download"></i><span>Export CSV</span>
      <% end %>
    </div>

    <!-- Status Counts -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
      <div class="bg-white shadow-md rounded-xl p-6 border-l-4 border-red-500">
        <div class="flex justify-between items-center">
          <div>
            <p class="text-gray-500 text-sm">Pending Orders</p>
            <h3 class="text-2xl font-bold text-red-600" id="pending-count"><%= @pending_count %></h3>
          </div>
          <i class="fas fa-clock text-red-500 text-3xl"></i>
        </div>
      </div>
      <div class="bg-white shadow-md rounded-xl p-6 border-l-4 border-yellow-500">
        <div class="flex justify-between items-center">
          <div>
            <p class="text-gray-500 text-sm">Processing</p>
            <h3 class="text-2xl font-bold text-yellow-600" id="processing-count"><%= @processing_count %></h3>
          </div>
          <i class="fas fa-cog text-yellow-500 text-3xl"></i>
        </div>
      </div>
      <div class="bg-white shadow-md rounded-xl p-6 border-l-4 border-blue-500">
        <div class="flex justify-between items-center">
          <div>
            <p class="text-gray-500 text-sm">Shipped</p>
            <h3 class="text-2xl font-bold text-blue-600" id="shipped-count"><%= @shipped_count %></h3>
          </div>
          <i class="fas fa-truck text-blue-500 text-3xl"></i>
        </div>
      </div>
      <div class="bg-white shadow-md rounded-xl p-6 border-l-4 border-green-500">
        <div class="flex justify-between items-center">
          <div>
            <p class="text-gray-500 text-sm">Delivered</p>
            <h3 class="text-2xl font-bold text-green-600" id="delivered-count"><%= @delivered_count %></h3>
          </div>
          <i class="fas fa-check-circle text-green-500 text-3xl"></i>
        </div>
      </div>
    </div>

    <!-- Filters -->
    <div class="bg-white shadow-md rounded-xl p-6 mb-6">
      <div class="flex flex-wrap gap-4">
        <div class="flex-1 min-w-0">
          <label for="status" class="block text-sm font-medium text-gray-700 mb-1">Status Filter</label>
          <select id="status-filter" onchange="filterOrders()" class="w-full border border-gray-300 rounded-lg px-4 py-2 focus:ring-2 focus:ring-green-500 outline-none">
            <option value="">All Orders</option>
            <option value="pending" <%= 'selected' if params[:status] == 'pending' %>>Pending</option>
            <option value="processing" <%= 'selected' if params[:status] == 'processing' %>>Processing</option>
            <option value="shipped" <%= 'selected' if params[:status] == 'shipped' %>>Shipped</option>
            <option value="delivered" <%= 'selected' if params[:status] == 'delivered' %>>Delivered</option>
            <option value="cancelled" <%= 'selected' if params[:status] == 'cancelled' %>>Cancelled</option>
          </select>
        </div>
        <div>
          <label for="start_date" class="block text-sm font-medium text-gray-700 mb-1">From Date</label>
          <input type="date" id="start-date-filter" onchange="filterOrders()" value="<%= params[:start_date] %>"
                 class="border border-gray-300 rounded-lg px-4 py-2 focus:ring-2 focus:ring-green-500 outline-none">
        </div>
        <div>
          <label for="end_date" class="block text-sm font-medium text-gray-700 mb-1">To Date</label>
          <input type="date" id="end-date-filter" onchange="filterOrders()" value="<%= params[:end_date] %>"
                 class="border border-gray-300 rounded-lg px-4 py-2 focus:ring-2 focus:ring-green-500 outline-none">
        </div>
        <div class="flex items-end gap-2">
          <button onclick="filterOrders()" class="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition flex items-center space-x-2">
            <i class="fas fa-search"></i><span>Filter</span>
          </button>
          <button onclick="clearFilters()" class="bg-gray-500 text-white px-6 py-2 rounded-lg hover:bg-gray-600 transition flex items-center space-x-2">
            <i class="fas fa-times"></i><span>Clear</span>
          </button>
        </div>
      </div>
    </div>

    <!-- Orders Table Container -->
    <div id="orders-table-container">
      <%= render 'orders_table' %>
    </div>

<% content_for :page_scripts do %>

<!-- JavaScript for AJAX status updates -->
<script>
  function filterOrders() {
    const csrfToken = document.querySelector('meta[name="csrf-token"]').content;
    const status = document.getElementById('status-filter').value;
    const startDate = document.getElementById('start-date-filter').value;
    const endDate = document.getElementById('end-date-filter').value;

    const params = new URLSearchParams();
    if (status) params.append('status', status);
    if (startDate) params.append('start_date', startDate);
    if (endDate) params.append('end_date', endDate);

    fetch(`/admin/orders?${params}&format=json`, {
      method: 'GET',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
        'X-CSRF-Token': csrfToken
      }
    })
    .then(response => response.json())
    .then(data => {
      // Update orders table
      document.getElementById('orders-table-container').innerHTML = data.html;

      // Update counts
      document.getElementById('pending-count').textContent = data.pending_count;
      document.getElementById('processing-count').textContent = data.processing_count;
      document.getElementById('shipped-count').textContent = data.shipped_count;
      document.getElementById('delivered-count').textContent = data.delivered_count;

      showFlashMessage('success', 'Orders filtered successfully!');
    })
    .catch(error => {
      console.error('Error:', error);
      showFlashMessage('error', 'Failed to filter orders. Please try again.');
    });
  }

  function clearFilters() {
    document.getElementById('status-filter').value = '';
    document.getElementById('start-date-filter').value = '';
    document.getElementById('end-date-filter').value = '';

    // Reload the page to clear all filters
    window.location.href = '/admin/orders';
  }


  function updateOrderStatus(orderId, newStatus) {
  const csrfToken = document.querySelector('meta[name="csrf-token"]').content;
  // Before sending, replace the dropdown with loading text
    const dropdown = event.target;
    const originalText = dropdown.options[dropdown.selectedIndex].text;
    dropdown.disabled = true;
    dropdown.innerHTML = '<option>Updating...</option>';

  fetch(`/admin/orders/${orderId}/status`, {
    method: 'PATCH',
    headers: {
      'Content-Type': 'application/json',
      'Accept': 'application/json',
      'X-CSRF-Token': csrfToken
    },
    body: JSON.stringify({ status: newStatus })
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      showFlashMessage('success', 'Order status updated successfully!');
      setTimeout(() => location.reload(), 1500);
    } else {
      showFlashMessage('error', data.error || 'Failed to update status');
    }
  })
  .catch(error => {
    console.error('Error:', error);
    showFlashMessage('error', 'Network error. Please try again.');
  });
}

  function showFlashMessage(type, message) {
    const existingAlert = document.querySelector('.flash-message');
    if (existingAlert) {
      existingAlert.remove();
    }

    const alertDiv = document.createElement('div');
    alertDiv.className = `flash-message fixed top-4 right-4 z-50 px-6 py-4 rounded-lg shadow-lg ${type === 'success' ? 'bg-green-500' : 'bg-red-500'} text-white max-w-sm`;
    alertDiv.innerHTML = `
      <div class="flex items-center">
        <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'} mr-2"></i>
        <span>${message}</span>
      </div>
    `;

    document.body.appendChild(alertDiv);

    // Auto-remove after 5 seconds
    setTimeout(() => {
      if (alertDiv.parentNode) {
        alertDiv.remove();
      }
    }, 5000);
  }
</script>

<% end %>